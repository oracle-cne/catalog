apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "mychart.fullname" . }}-osd
  labels:
  {{- if .Values.ingress.extraLabels }}
  {{- .Values.ingress.extraLabels | toYaml | nindent 4 }}
  {{- end }}
  {{- include "mychart.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 6M
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/upstream-vhost: ${service_name}.${namespace}.svc.cluster.local
  {{- if .Values.ingress.extraAnnotations }}
  {{- .Values.ingress.extraAnnotations | toYaml | nindent 4 }}
  {{- end }}
spec:
  ingressClassName: {{ .Values.ingress.spec.ingressClassName }}
  rules:
  - host: {{ .Values.ingress.spec.rules.host }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Values.ingress.spec.rules.service.name }}
            port:
              number: {{ .Values.ingress.spec.rules.service.port.number }}
        path: /()(.*)
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - {{ .Values.ingress.spec.rules.host }}
    secretName: {{ .Values.ingress.spec.tls.secretName }}