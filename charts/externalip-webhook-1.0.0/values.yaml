# Default values for externalip-webhook.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: olcne/externalip-webhook
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: v1.0.0-4

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443
  targetPort: 9443

# If set to true, the PKI secret is created when installing the application.
# It uses the values of .caCert, .tlsCert, and .tlsKey to populate the secret.
# Be aware that allowing the chart to create the secret will place the key
# values in the Helm release secret.
#
# If the value is false, the application will use a manually created secret.
# While it is not necessary to create the secret prior to installing the chart,
# the webhook pods will not start until the secret is available.
createSecret: false

# The public certificate for the certififcate authority that signed the
# certificate configured with .tlsCert and .tlsKey.  It must be base 64 encoded.
# This value is required even if .createSecret is false.
caCert: ""

# The public certificate and private key for the webhook service.  It must be
# base 64 encoded.  These values are optional if .createSecret  is false.
tlsCert: ""
tlsKey: ""

# A comma separated list of CIDR blocks to allow.
allowedCidrs: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
