---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-vsphere
    clusterctl.cluster.x-k8s.io: ""
    control-plane: controller-manager
  name: {{ include "vsphere-capi.fullname" . }}-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-vsphere
      control-plane: controller-manager
  strategy: {}
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-vsphere
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --leader-elect
            - --diagnostics-address={{ .Values.controllerManager.manager.env.diagnosticsAddress }}
            - --insecure-diagnostics={{ .Values.controllerManager.manager.env.insecureDiagnostics }}
            - --v=4
            - --feature-gates=NodeAntiAffinity={{ .Values.controllerManager.manager.env.nodeAntiAffinity }},NamespaceScopedZones={{ .Values.controllerManager.manager.env.namespacedScopedZones }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
          image: {{ .Values.controllerManager.manager.image.repository}}:{{ .Values.controllerManager.manager.image.tag }}
          imagePullPolicy: {{ .Values.controllerManager.manager.imagePullPolicy }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 9440
              name: healthz
              protocol: TCP
            - containerPort: 8443
              name: metrics
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: healthz
          resources: {}
          securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
            | nindent 10 }}
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
            - mountPath: /etc/capv
              name: manager-bootstrap-credentials
              readOnly: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "vsphere-capi.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: 10
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "vsphere-capi.fullname" . }}-webhook-service-cert
        - name: manager-bootstrap-credentials
          secret:
            secretName: {{ include "vsphere-capi.fullname" . }}-bootstrap-credentials
